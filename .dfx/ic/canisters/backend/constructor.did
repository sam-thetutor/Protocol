type BidOffer = record {
  time : int;
  price : nat64;
  bid_id : nat;
  bidder : principal;
};
type BobInfo = record {
  blocksMined : nat64;
  totalMiners : nat64;
  currentBlockMinerCount : nat64;
  nextHalvingIn : nat64;
};
type Miner = record { id : principal; mined_blocks : nat64 };
type MinerSale = record {
  owner : principal;
  offers : vec BidOffer;
  price : nat64;
  miner_id : text;
  miner_type : MinerType;
};
type MinerType = variant { BOB; BONE };
type PortalFactory = service {
  add_miner_for_sale : (principal) -> (vec principal);
  create_user_portal : () -> (Result);
  get_all_miners_for_sale : () -> (vec record { text; MinerSale });
  get_all_portals : () -> (vec record { principal; text });
  get_bob_info : () -> (BobInfo);
  get_bob_miner_pool_hours_left : (principal) -> (nat64);
  get_miners_for_sale : (text) -> (opt MinerSale);
  get_user_miners : (principal) -> (vec Miner);
  get_user_portal : (principal) -> (text);
  remove_miner_from_sale : (text) -> (text);
  save_user_portal : (principal, text) -> ();
  upgrade_portal : (text) -> (text);
  uploadWasm : (blob) -> (text);
};
type Result = variant { ok : record { portalID : text }; err : text };
service : () -> PortalFactory