type saleOffer = 
 record {
   bidder: principal;
   price: nat64;
   time: int;
 };
type Result = 
 variant {
   err: text;
   ok: record {portalID: text;};
 };
type PortalSale = 
 record {
   offers: vec saleOffer;
   owner: principal;
   portal_id: text;
   price: nat64;
 };
type PortalFactory = 
 service {
   create_user_portal: () -> (Result);
   get_all_portals: () -> (vec record {
                                 principal;
                                 text;
                               });
   get_all_portals_for_sale: () -> (vec record {
                                          text;
                                          PortalSale;
                                        });
   get_bob_info: () -> (BobInfo);
   get_bob_miner_pool_hours_left: (principal) -> (nat64);
   get_portal_for_sale: (text) -> (PortalSale);
   get_user_miners: (principal) -> (vec Miner);
   get_user_portal: (principal) -> (text);
   remove_portal_from_sale: (text) -> (text);
   save_user_portal: (principal, text) -> ();
   upgrade_portal: (text) -> (text);
   uploadWasm: (vec nat8) -> (text);
 };
type Miner = 
 record {
   id: principal;
   mined_blocks: nat64;
 };
type BobInfo = 
 record {
   blocksMined: nat64;
   currentBlockMinerCount: nat64;
   nextHalvingIn: nat64;
   totalMiners: nat64;
 };
service : () -> PortalFactory
